name: Deploy Application Docker Image to EC2 Instance

on:
    push:
        branches: [main]

 
jobs:
  Continous-Integration:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v2

      # Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Build the Docker image
      - name: Build Docker image
        id: build-image
        env: 
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
            IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

      # Push Docker image to Amazon ECR
      - name: Push Docker image to Amazon ECR
        id: push-image
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
            IMAGE_TAG: latest        
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSTITORY:$IMAGE_TAG"          
          

  Continous-Deployment:
    needs: Continous-Integration
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1 
        
     # Pull the Docker image from ECR
      - name: Pull Docker image from ECR
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
            IMAGE_TAG: latest      
        run: |
          docker run -d -e AWS_ACCESS_KEY_ID="${{ 
          secrets.AWS_ACCESS_KEY_ID }}" -e 
          AWS_SECRET_ACCESS_KEY="${{ secrets. AWS_SECRET_ACCESS_KEY }}" -e 
          AWS_DEFAULT_REGION="${{ secrets. AWS_DEFAULT_REGION }}" -e 
          OPENAI_API_KEY ="${{ secrets.OPENAI_API_KEY }} 
          " -p 8080:8080 "${{ steps.login-ecr.outputs.
          registry }}"/"${{ secrets.ECR_REPO }}":latest
