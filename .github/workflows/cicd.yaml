name: Build, Tag, and Push Docker Image to ECR

on:
  push:
    branches:
      - main   # Change this to the branch you want to trigger the pipeline from

env:
  AWS_REGION: 'eu-north-1' # Change to your AWS region
  IMAGE_NAME: 'latest'    # Default image name, this can be overridden in the workflow file
  ECR_REPO: ${{ secrets.ECR_REPO }}    # ECR repository name (set in GitHub secrets)
  IMAGE_TAG: ${{ github.sha }}          # Use the commit SHA as the default image tag

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up AWS CLI and login to ECR
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 3: Login to AWS ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO }}

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      # Step 5: Tag the Docker image for the ECR repository
      - name: Tag Docker image
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ secrets.ECR_REPO }}:${{ env.IMAGE_TAG }}

      # Step 6: Push the Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPO }}:${{ env.IMAGE_TAG }}